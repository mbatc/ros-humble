diff --git a/CMakeLists.txt b/CMakeLists.txt
index 11462f11..021044c5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -70,17 +70,31 @@ add_library(${PROJECT_NAME} ${${PROJECT_NAME}_sources})
 target_include_directories(${PROJECT_NAME} PUBLIC
   "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>"
   "$<INSTALL_INTERFACE:include/${PROJECT_NAME}>")
-# specific order: dependents before dependencies
-ament_target_dependencies(${PROJECT_NAME}
-  "rcl_interfaces"
-  "rcl_logging_interface"
-  "rcl_yaml_param_parser"
-  "rcutils"
-  "rmw"
-  "rmw_implementation"
-  ${RCL_LOGGING_IMPL}
-  "rosidl_runtime_c"
-  "tracetools"
+
+
+target_link_libraries(${PROJECT_NAME} PUBLIC
+  # TODO(clalancette): rcl_interfaces should be PRIVATE, but downstream depends on it for now
+  ${rcl_interfaces_TARGETS}
+  # TODO(clalancette): rcl_logging_interface should be PRIVATE, but downstream depends on it for now
+  rcl_logging_interface::rcl_logging_interface
+  rcl_yaml_param_parser::rcl_yaml_param_parser
+  rcutils::rcutils
+  rmw::rmw
+  # TODO(clalancette): rmw_implementation should be PRIVATE, but downstream depends on it for now
+  # rmw_implementation::rmw_implementation
+  rosidl_runtime_c::rosidl_runtime_c
+  ${type_description_interfaces_TARGETS}
+)
+
+target_include_directories(${PROJECT_NAME} PRIVATE
+  ${rmw_implementation_INCLUDE_DIRS}
+)
+
+target_link_libraries(${PROJECT_NAME} PRIVATE
+  ${RCL_LOGGING_IMPL}::${RCL_LOGGING_IMPL}
+  ${service_msgs_TARGETS}
+  tracetools::tracetools
+  yaml
 )
 
 # Causes the visibility macros to use dllexport rather than dllimport,
@@ -110,17 +124,13 @@ ament_export_libraries(${PROJECT_NAME})
 # Export modern CMake targets
 ament_export_targets(${PROJECT_NAME})
 
-# specific order: dependents before dependencies
 ament_export_dependencies(ament_cmake)
 ament_export_dependencies(rcl_interfaces)
 ament_export_dependencies(rcl_logging_interface)
 ament_export_dependencies(rcl_yaml_param_parser)
-ament_export_dependencies(rmw_implementation)
-ament_export_dependencies(rmw)
 ament_export_dependencies(rcutils)
-ament_export_dependencies(${RCL_LOGGING_IMPL})
+ament_export_dependencies(rmw)
 ament_export_dependencies(rosidl_runtime_c)
-ament_export_dependencies(tracetools)
 
 if(BUILD_TESTING)
   find_package(ament_lint_auto REQUIRED)
diff --git a/src/rcl/context.c b/src/rcl/context.c
index 5414cc5e..b082aa01 100644
--- a/src/rcl/context.c
+++ b/src/rcl/context.c
@@ -35,7 +35,7 @@ rcl_get_zero_initialized_context(void)
   // this is not constexpr so it cannot be in the struct initialization
   context.global_arguments = rcl_get_zero_initialized_arguments();
   // ensure assumption about static storage
-  static_assert(
+  _Static_assert(
     sizeof(context.instance_id_storage) >= sizeof(atomic_uint_least64_t),
     "expected rcl_context_t's instance id storage to be >= size of atomic_uint_least64_t");
   // initialize atomic
